0. Исходный выриант программы 

1. Первый вариант переделанной программы.
Удалены 2 библиотеки;
xdb.jar
xmlparserv2.jar
Программа полностью переделана.

2. Удалена интерфейсная библиотека SwingSet.jar
Созданы собственные интерфейсные элементы для таблицы и выпадающего списка.
Все сделано стандартными средствами java.

3. Созданы пакеты domain и service
Т.о. выделены классы объектов и операции над ними.
Но операции только в классе редактирования. В классах просмотра используется универсальный класс TabPanel.
Добавлен logger JUL.
Создана форма logon. Создан файл конфигураций для connect config.xml.
Рассмотрены парсеры SAX и DOM для считывания файла конфигураций.

4. Добавлен логгер logback, slf4j.
Соответственно добавились новые библиотеки:
slf4j
logback-core
logback-classic

5. Доработана процедура входа в задачу.
Файл конфигураций разделен на отдельные файлы.
Форма logon использует список файлов конфигураций. 
Конфигурации только считываются, не перезаписываются.
Переделаны классы TbPanel, TbModel. Из TbModel выделен TbManager.

6. Созданы базовые классы FrameList, FrameEdit, FrameView, FrameLogon
Т.о. переделана вся структура приложения.
Все формы унаследованы из этих классов.
Все формы, основанные на FrameList используют менеджер SelectManager.
Форма logon использует список файлов конфигураций. 
Конфигурации только считываются, не перезаписываются.

7. Для каждого класса формы созданы свои собственные классы менеджеры 
XxxxxManagerList и XxxxxManagerEdit. Также созданы свои DataModel для каждого 
класса List. Т.о. SelectManager размножился на классы XxxxxManagerList, забрав 
часть функционала из основного менеджера. Основной менеджер превратился в
XxxxxManagerEdit.
Создан ManagerList и производный от него класс ManagerListStr. 
От него происходят все XxxxxxManagerList.
Также создана иерархия классов DmXxxxxx. 
Создан базовый класс DmPanel, от него DmListStr. Все dataModel происходят от DmListStr.

8. Вместо DmListStr и ManagerListStr, которые реализуют модель со строковым массивом данных, 
реализованы полноценные менеджеры и модели для классов объектов.
Пришлось создать класс Renderer для отображения дат с часами и минутами.
Добавлен массив типов колонок.
Стандартное отображение дат отображало только дату.
Т.о. полностью реализована объектная модель стандартными средствами java.
Подправлен интерфейс. Для колонки ID установлена фиксированная длина.
Следующий этап - Hibernate.

9. queryPartOpen и queryPartMove заменены на openQuery, queryPart
DbUtils -> StrSqlUtils, DbUtils

11. Использование 2 логгеров одновременно (Hibernate использует jboss-logging -> Log4J, само приложение slf4j -> logback)
